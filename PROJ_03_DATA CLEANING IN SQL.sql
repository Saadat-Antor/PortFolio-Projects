/*

DATA CLEANING IN SQL

SKILLS USED: CTEs, JOIN, DATA TYPE MODIFICATION, USER DEFINED FUNCTIONS

*/



SELECT * FROM [dbo].[Nashville Housing]


-- DATE FORMAT MODIFYING

ALTER TABLE [dbo].[Nashville Housing]
ADD SALEDATE_MOD DATE

UPDATE [dbo].[Nashville Housing]
SET SALEDATE_MOD = CONVERT(DATE,SALEDATE)

SELECT SALEDATE, SALEDATE_MOD FROM [dbo].[Nashville Housing]



-- POPULATE ADDRESS DATA WHERE NULL

SELECT * FROM [Nashville Housing]
ORDER BY PARCELID-- SAME ADDRESS RECORDED TWICE

SELECT A.PARCELID, A.PROPERTYADDRESS, B.PARCELID, B.PROPERTYADDRESS, ISNULL(A.PROPERTYADDRESS, B.PROPERTYADDRESS)
FROM [dbo].[Nashville Housing] A JOIN [dbo].[Nashville Housing] B
ON A.PARCELID = B.PARCELID AND A.UNIQUEID <> B.UNIQUEID
WHERE A.PROPERTYADDRESS IS NULL
ORDER BY A.PARCELID

UPDATE A
SET PROPERTYADDRESS = ISNULL(A.PROPERTYADDRESS, B.PROPERTYADDRESS)
FROM [dbo].[Nashville Housing] A JOIN [dbo].[Nashville Housing] B
ON A.PARCELID = B.PARCELID AND A.UNIQUEID <> B.UNIQUEID
WHERE A.PROPERTYADDRESS IS NULL



-- BREAKING ADDRESS COLUMN INTO MULTIPLE COLUMNS (ADDRESS, CITY, STATE)

-----------------------------PROPERTY ADDRESS TABLE----------------------------------------------
SELECT
PROPERTYADDRESS, SUBSTRING(PROPERTYADDRESS, 1, CHARINDEX(',', PROPERTYADDRESS)-1) AS ADDRESS_01,
SUBSTRING(PROPERTYADDRESS, CHARINDEX(',', PROPERTYADDRESS)+1, LEN(PROPERTYADDRESS)) AS ADDRESS_02
FROM [dbo].[Nashville Housing]

ALTER TABLE [Nashville Housing]
ADD PROPERTY_ADDRESS NVARCHAR(255)

UPDATE [Nashville Housing]
SET PROPERTY_ADDRESS = SUBSTRING(PROPERTYADDRESS, 1, CHARINDEX(',', PROPERTYADDRESS)-1)

ALTER TABLE [Nashville Housing]
ADD PROPERTY_CITY NVARCHAR(255)

UPDATE [Nashville Housing]
SET PROPERTY_CITY = SUBSTRING(PROPERTYADDRESS, CHARINDEX(',', PROPERTYADDRESS)+1, LEN(PROPERTYADDRESS))


-----------------------------OWNER ADDRESS TABLE----------------------------------------------
SELECT OWNERADDRESS,
PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 3) AS OWNER_ADDRESS,
PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 2) AS OWNER_CITY,
PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 1) AS OWNER_STATE
FROM [Nashville Housing]
WHERE OWNERADDRESS IS NOT NULL


ALTER TABLE [dbo].[Nashville Housing]
ADD OWNER_ADDRESS NVARCHAR(255),
OWNER_CITY NVARCHAR(255),
OWNER_STATE NVARCHAR(255)

UPDATE [dbo].[Nashville Housing]
SET
OWNER_ADDRESS = PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 3),
OWNER_CITY = PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 2),
OWNER_STATE = PARSENAME(REPLACE(OWNERADDRESS, ',', '.'), 1)




-- CHANGING 'YED' TO 'Y' AND 'NO' TO 'N'

SELECT DISTINCT(SOLDASVACANT), COUNT(SOLDASVACANT)
FROM [dbo].[Nashville Housing]
GROUP BY SOLDASVACANT


UPDATE [dbo].[Nashville Housing]

SET SOLDASVACANT =
 
CASE

WHEN SOLDASVACANT = 'YES' THEN 'Y'
WHEN SOLDASVACANT = 'NO' THEN 'N'

ELSE

SOLDASVACANT

END




-- DELETING DUPLICATE DATA FROM THE DATABASE TABLE


WITH DELETE_DUP 
AS
(
SELECT *, DENSE_RANK() OVER (
PARTITION BY PARCELID,
PROPERTYADDRESS,
SALEDATE,
SALEPRICE,
LEGALREFERENCE,
OWNERNAME 
ORDER BY UNIQUEID
) ROW_NUMB
FROM [dbo].[Nashville Housing]
)
SELECT * FROM DELETE_DUP
WHERE ROW_NUMB >1



-- DELETING UNNECESSARY COLUMNS (NOT A BEST PRACTICE)

ALTER TABLE [dbo].[Nashville Housing]
DROP COLUMN PROPERTYADDRESS, SALEDATE, OWNERADDRESS, TAXDISTRICT, YEARBUILT